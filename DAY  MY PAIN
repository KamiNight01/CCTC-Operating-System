sudo apt-get install  oneko





reg query "HKEY_Users\S-1-5-21-2881336348-3190591231-4063445930-1003\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\RUN" 




Get-ChildItem "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList"




Get-ChildItem "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\NetworkList\Profiles"


_________________________________________________________________________________________________________________________________________________________
DAY 3
----------------------------------------------------------
LINUX 

create an alias for out linux opstation.

Host linops
    Hostname 10.50.40.254
    User student
    Port 22

 ---------------------------
 
 chmod 600 .ssh/config 
 ssh-keygen
 ssh-copy-id linops



vim .bash_aliases


-----------------------------------------------------------
HOST enumeration 
 step to check when you get into the box 
 
 where am i?  hostname /uname-a
 
who am i? whoami / id

what am i allowed to do ?   sudo -l

what's going on ? who / w / ps-elf


what's that 

why is that happenening ? 

how is that happening ? 

what's in there ? 




FILES:



man  hier
 Root
  /bin
  (/usr/bin)  or (/usr/localbin) ---- which holds th binaries  such as cat 
  
  
  sbin
  (/usr/sbin)---- system binaries 
  
  /Home - directory that is the default for the user's home directory
  
  /usr     = universal  syste, resources any file designed to be used accors the entire system.
  
  /etc     ---- everything that's configrational
  
  
  
  
  /var  --- thing' that are likely to change mostly logs
  
  /boot   --- holds the boot
  ess, read  during bot process.
  
  
  /dev -- has all the strign cuh as strin/strout/trerr
  
  
  /lib 
   --- libraries
   
   
   /MOUNT -- to e used for permiately mount 
   
   /media     
   
   
   /opt   -optional 
   
   /run      run-time variable data 
   /tmp   --- temporarry files  - everyone has access 
   
   /proc ----processes
   
   
   --------------------------------------------------------
   users/groups 
    /etc/passwd - holds the list of al the userso n the system 
    
   
   
   _-------
   
   /etc/passwd  
   nginx:x:100:101:nginx:/var/lib/nginx:/sbin/nologin
   Username:Password:User ID (UID):Group ID (GID):comments:Home directory:Home directory: 
   
   _____________________________________________________________________________________________________________
   
   Using the commands ls and grep, identify the number of directories in /etc/ that end in .d
   
   
   ls -l /etc | egrep '\.d$' |wc -l 
   
   
   
   Use regular expressions to match valid IP addresses. The flag is the number of addresses.

HINT: What are the valid numerical values of each octet in an IP address?

   
   egrep '^((25[0-5]|2[0-4][0-9]|[1]?[1-9][0-9]?).){3}(25[0-5]|2[0-4][0-9]|[1]?[1-9]?[0-9])$' numbers |wc -l 



___________________________________________________________________________________________________________________________________________
DAY5
WINDOWS BOOT PROCESS AND BCD EDIT
-------------------------------------------------------------------------------------------------------------------------------------------

 POST
 
 BIOS                                       UEFI
 -uses MBR                                  -uses GPT
 
 MBR is the first 512 bytes on the drive. it can only have up to 4 active partition.
 with sub partitions up to 26 total. 
 
 
 1.-----
 Ntoskrnl.exe --
 
 loads driver 
 then loads the KHLM
 then starts the page files.
 ---- 
 2. 
 system creates  smss 
 smss forks into two sessions session0 and 1. session 0 is assigned to system 
and session 1 is assigned to user.
 
 
 
                    -----------SMSS.exe (session 0)           
 SYSTEM ----> SMSS       forks to 2 different session 
                    ------------ SMSS.exe (session1)
 
 
 _______________________________________________________
 https://www.docdroid.net/h44QP8i/mod-7-second-part-docx
 https://www.docdroid.net/I2icaX7/mod-7-part-1-docx#page=7
 ______________________________________________________
 
 how to find out what mode you are using  either UEFI or BIOS 
 
 type C:\windows\panther\setupact.log | findstr /i "detect boot enviroment"
 bcdedit | findstr /i winload
 bcdedit | findstr /i winresume
 
  ( to find the current identifier do bcdedit )
  
  
___________________________________________________________________________________________________________________________________________________

LINUX BOOT PROCESSS
DAY 6
---------------------------------------------------------------
BIOS
MMBR
GRUB
Kernel
Init
Runlevels


sudo dmidecode -t bios
 
 lsblk - shows which disk are in the system and where they are mounted 

df -h shows you what is mounted na where it's mounted and  how muh =ch soace is used
 
 sudo xxd -l 512 -g 1 - gives you the hex dump of a file.

eb is the hex representation of jump to that position. (hex 90 is noop)

sudo parted -l shows wheter you have bios or gpt.


sudo dd if=/dev/sda of=MBRoutcast bs=1 count=512
xxd MBRoutcast 

configuration file for GRUB is 
/boot/grub/grub.cfg

everything in the menu item  will be run if the menu item is selected.


`---------------------------------------------------------------
set linux_gfx_mode=auto
export linux_gfx_mode
menuentry 'Ubuntu' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-LABEL=cloudimg-rootfs' {
	recordfail
	load_video
	gfxmode $linux_gfx_mode
	insmod gzio
	if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
	insmod part_msdos
	insmod ext2
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root  6c0fba3b-b236-4b3a-b999-db7359c5d220
	else
	  search --no-floppy --fs-uuid --set=root 6c0fba3b-b236-4b3a-b999-db7359c5d220
	fi
        linux	/boot/vmlinuz-4.15.0-76-generic root=LABEL=cloudimg-rootfs ro  console=tty1 console=ttyS0
	initrd	/boot/initrd.img-4.15.0-76-generic  
    
     (linux  thta's the command that loads the kernel) 
     initrd loads the basic systems where all the drivers are preloaded)
     
--------------------------------------------------------------------------------------------------------
Kernel - manages the interaction between the os and the hardware.

lsmod - lists all the modules on the system and who utilizes them 
 ps -p1 
 
 ls -l /sbin/init
 lrwxrwxrwx 1 root root 20 Nov 15  2019 /sbin/init -> /lib/systemd/systemd
 to see if you are in system 5 or systemd. 
 init(sysV) - service/process manager

to see the run level 
ls /etc/rc3.d

or ls /etc/rc1.d tp see the kill order

cat /etc/inittab to see the current run level  ( check if it's doing something weird)
/etc/init.d   where all the  S and K scripts are in  (start and kill ) 
 all scripts should be in etc/init.d ( ls -l  /etc/rc3.d)

RUN LEVELS 

0 - halt (Do NOT set initdefault to this)
1 - Single user mode (switched from multi-user)
2 - Multiuser, without networking
3 - Full multiuser mode, with networking
4 - unused
5 - X11 (GUI)

‘ls -l /etc/rc<1-6>.d’ to see different services run in each runlevel

 to see the current run level 
  ls -lisha  /lib/systemd/system/default.target 
8499 0 lrwxrwxrwx 1 root root 16 Nov 15  2019 /lib/systemd/system/default.target -> graphical.target

cat /lib/systemd/system/default.target        (used to house services that are created by package maintaners)

cat /etc/systemd/system/display-manager.service    ( for user created services)

cat/usr/lib/systemd/system


systemctl list-dependencies graphical.target
 ecerything that's below (multi-user-target0 are wants 
 everything  1 stop under graphical.target is required
 
 systemctl show -p Wants  graphical.target
 
 
 
 systemctl cat graphical.target   to show info about it aswell as ind the location)
 
 
/lib/systemd/system/graphical.target

 systemctl list-unit-files
 


cat /etc/environment    all global variables 
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"

/etc/profile  --- persistance

 
sudo dd if=/dev/sda of=MBRoutcast bs=1 count=512


 to get default run level on sysV do   cat /etc/inittab 





egrep '^([0-9a-fA-F][02468ACE]-)([0-9a-fA-F]{2}-){4}[0-9a-fA-F]{2}$' numbers  | wc -l   --- regex for unicast mac address



______________________________________________________________________________________________________________________________________________________
DAY 7 
NOTES
______________________________________________________________________________________________________________________________________________________

tasklist --- lsit all running tasks 
 get-process  -  same as tasklist 
 A process is an instance of a particular executable (.exe program file) running. 
 A service is a process which runs in the background and does not interact with the desktop.
  process requires interaction. 
  dll( dynamic linked libraries) - contains pointers to resources for other programs to interact with. 
  
  
  
  Get-WmiObject win32_process 
  Get-CimInstance  win32_process to get a deeper look at  processes.
  Get-CimInstance  win32_process | select *    ----- to get more detailed listing)
  
  Get-CimInstance  win32_process | where -Property name -like *LSASS* | select *     ----- to select a specific one 
  Get-CimInstance  win32_process | where {$_.Name -like "*LSASS*"} | select *
  
  virustotal.com   ( to check for a binary ) 
  
HOW TO LOOK at handles  to verify the legitimacy of a dll to see if it's coming from the correct location 
get-process -name lsass
Get-Process -Name lsass  | select -ExpandProperty Modules | out-file C:\Users\student\Desktop\handles -Width 4096
Get-Process -Name lsass  | select -ExpandProperty Modules | format-table


how to look at hidden/services 
get-service --- to see a list of the services 
get-content
sc.exe showsid AJRouter   to get the service sid of Ajrouter   ( careful with this tho cause it could lead to false positive to verify with a second method.)

 Get-WmiObject win32_process | Select-Object -Property name, processID, ParentprocessID, path, commandline | ft

sc.exe queryex type=service state=inactive   
 it shows active stuff by default so state should be specified.


Get-Process -Name powershell  | select -ExpandProperty Modules | format-table -Wrap

____________________________________________________________________________________
scheduled tasks 
------------------------------------------------------
schtasks.exe /query /tn "\Microsoft\XblGameSave\XblGamesavetask"

 schtasks.exe /query /tn "GoogleUpdateTaskMachineCore{A05072F6-D535-4655-AC8C-C1AF3F6F7956}" /v | format-list

netstat -anob
get-nettcpconnection

----------------------------
sys internals 
-------------------
process explorer  --- allows you to suspend a process instead of killing it 

tcpview - 

procmon   - registrry monitor and process listing to be used for monitoring the boot process.  ( start it go to file - options - enable boot login - every second 
-  enable - restart save  temp copy and when it starts back up  and it will hold the process monitors - very useful for finding bootkits)
( use the script given by ssgt)


 autoruns64 ----- reads the registry and extensions point and detects to see what starts automatically. 
 so checks for persistance/ startup applications / drivers / scheduled tasks  as well as scans the registry.
  when chechking autorun it should never say file not found.
 
 
 handles ----
 
  if it says checks the  permissions of a file  you might wanna google find effective permissions  sysinternals( USEFUL)

______________________________________________________________________________________________________________________________________________________
UAC -user access control
______________________________________________________________________________________________________________________________________________________
Auto Elvate is True

./strings C:\Windows\System32\*.exe -accepteula | select-string -SimpleMatch "autoelevate"

Digitally Signed

./sigcheck -m C:\Windows\System32\slui.exe -accepteula | Select-String -SimpleMatch "level"

Trusted Directory

i.e C:\Windows\System32


------------------------------------
What Sysinternals tool can view permissions?
ans -accesschk

----------------------------------------------
What Sysinternals tool shows malware persistence locations in tabs within its GUI?
ans -
--------------------------------
What Sysinternals tool shows malware persistence locations in tabs within its GUI?
auto runs
---------------------------------------------
What Sysinternals tool can be used to investigate network connection attempts?
ans- tcpview

___________________________________________________________________________________________________________________________________________________________
day 8
linux process validity 
___________________________________________________________________________________________________________________________________________________________
process - a running list of current process 

ps-elf     ( everything , long listing and format)
gives you a snapshot of the current running process 

here are two primary processes after startup:

For kernel-space processes [kthreadd] ( PID = 2 )

For user-space processes /sbin/init ( PID = 1 )

All kernel processes are fork()ed from [kthreadd] and all user processes are fork()ed from /sbin/init or direct ancestor.

Kernel processes are typically used to manage hardware, are directly handled by the kernel,have their own memory space, and have a high priority.

They can be identified by the name enclosed in square brackets [] (using the -f option with ps). kthreadd spawned processes will have a PPID of 2.

The kernel starts /sbin/init which is the parent/grandparent of all user processes.

 if a process is [bracketed] it's forked from the kthreaded process with a pid of 2.
 
 
ps -Nlf --ppid 2
gives you everything that does not have a parent pid of 2.

ps -elf --forest
shows you how the command ran and also what order it was executed from.  in tree branching format
 
 ps -Nlf --ppid 2 --forest | grep  -B 8 ps      (-B or -A gives you the specific amount that you want before or after the string was found)
  ps -Nlf --ppid 2 --forest | grep --context=8 ps   this one gives you 8 lines above and 8 lines below 


----------------------------------------------------------------------------------------------------------------------
top    (htop  is a better option)
gives you the running processs  (dynamic)
f to add new field , 
shift + v gives you a heirarchical view of the running processes.

htop - active running process 
press f5 to get it as tree view 
f2 to setup that allows  you to customze and add more options 
----------------------------------------------------------------------------------------------------------------------
Kernel Space vs user space 
The kernel processes run in its own memory space. User processes run in a separate memory space. Code running in kernel mode has unrestricted access
to the processor and main memory. This is a powerful but dangerous privilege that allows a kernel process to easily crash the entire system. 
The area that only the kernel can access is called kernel space.User mode, in comparison, restricts access to a (usually quite small) 
subset of memory and safe CPU operations. User space refers to the parts of main memory that the user processes can access. 
If a process makes a mistake and crashes, the consequences are limited and can be cleaned up by the kernel. This means that if your web browser crashes,
it won’t take down the system

---------------------------------------
system calls
----------------------------------------
A system call is an interaction between a process and the kernel.
Two system calls, fork() and exec(), are important to understanding how processes startup:
fork() When a process calls fork(), the kernel creates a nearly identical copy of the process.
exec() When a process calls exec(program), the kernel starts program, replacing the current process.



---------------------------------------------------------------
every daemon is a orphan but not every orphan is a daemon  
---------------------------------------------------------------
ORPAHN:
Orphan - Parent process exited, adopted by sbin/init with PPID of 1.
All daemons are orphans
disown -a && exit # Close a shell/terminal and force all children to be adopted
 init or systemd  adopts all orphan process with  an ppid of 1 
 
 ZOMBIE:
  Z in state field 
 ZOmbie is a process that compreted it's process bit never got the terminate signal from the ppid.
 Zombie (defunct) - completed process, but still has an entry in the process table, waiting on parent to acknowledge or terminate.
Zombie can’t be terminated with kill since it has already finished execution, unless the parent process that spawned it is killed.
Do not use resources, but do take up an entry of the process table which is a finite resource.

------------------------------------------------------------------------------------------------------------- 
DAEMONS:
Program that runs as a background process (Ex. syslogd, sshd, cron)
All daemons are Orphans, but all orphans are not Daemons
A daemons purpose is to manage/monitor a service: {status, start, restart}
‘man cron’ - to see an example of a daemon that starts during the boot process
Persistence - Daemons are service that should run for duration of system operation, since init is parent, would require shutdown for parent to die.
Malicious processes are sometimes orphaned and named to make it look like a daemon process ‘ps --ppid 1 -lf’
---------------------------------------------------------------------
JOBS :

‘jobs’ - Display List of Jobs running in the background
‘fg’ or ‘bg’ - Push / Pull jobs to / from the foreground / background
‘kill %<job number>’ - Terminate the process by job number
‘[ctrl -z]’ or ‘kill -19’ - stop / suspend the job
‘kill -9 <PID>’ or ‘pkill -9 <process name>’
Stop Process = SIGSTOP(19) (pause signal, let’s you continue later, does not kill process)
End Process = SIGTERM(15) (termination signal, the right way, the application can intercept this signal and initiate shutdown tasks such as temp file cleanup)
Kill Process = SIGKILL(9) (kill signal, extreme, only use if SIGTERM doesn’t work, won’t initiate shutdown tasks)

list of all kill signals 
Kill -l 
1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL       5) SIGTRAP     
 6) SIGABRT      7) SIGBUS       8) SIGFPE       9) SIGKILL     10) SIGUSR1     
11) SIGSEGV     12) SIGUSR2     13) SIGPIPE     14) SIGALRM     15) SIGTERM     
16) SIGSTKFLT   17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP     
21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU     25) SIGXFSZ     
26) SIGVTALRM   27) SIGPROF     28) SIGWINCH    29) SIGIO       30) SIGPWR      
31) SIGSYS      34) SIGRTMIN    35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3  
38) SIGRTMIN+4  39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8  
43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13 
48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12 
53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7  
58) SIGRTMAX-6  59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2  
63) SIGRTMAX-1  64) SIGRTMAX


--------------------------------------------------------------------------------------------------------------------------------------
Cron Jobs:
 locations:    
 /etc/crontab
 /etc/cron.d        ---- system cron jobs 

/var/spool/cron      ----- user cron jons 



crontab 
-e edits 
-l lists jobs 
-l -u lists other users jobs 
-e -u  edits other users jobs


cron daemon checks the directories /var/spool/cron, /etc/cron.d and the file /etc/crontab,
once a minute and executes any commands specified that match the time.
Two types of cron jobs
System cron jobs
run as root and rigidly scheduled
perform system-wide maintenance tasks (Cleaning out /tmp or rotating logs)
controlled by /etc/crontab
User cron jobs
Use 'crontab’ command to create user cron jobs
stored in /var/spool/cron/
`crontab -u [user] file’ - sets users crontab file to the contents of listed file
‘crontab -l -u [user]’ - Displays user’s crontab contents
‘crontab -r -u [user]’ - Removes user’s crontab contents
‘crontab -e -u [user]’ - edits user’s crontab contents
crontab jobs run with the permissions of the owner of the crontab file
* * * * * /directory/and/command
| | | | |
| | | | +---- Day of the Week   (range: 0-7, 1 = Monday)
| | | +------ Month of the Year (range: 1-12)
| | +-------- Day of the Month  (range: 1-31)
| +---------- Hour              (range: 0-23)
+------------ Minute            (range: 0-59)


--------------------------------------------------------------------------------------------
PROC Directory 

la /proc ---- holds all the process ids

lsof  it's lists all the open files for the processes on the system.

sudo lsof -p  <sshd pid>

sudo lsof -p 10161 -c sshd

----------------------
 list unit
 
sudo systemctl list-units --all

sudo systemctl list-units --all --type service

----------------------------------------

 socket -made of a socket and a port 


if something is happening regularly and you cant find it in cronjobs then check the timer file which can be attached to it 
sudo systemctl list-units --all --type timer      -------to see the one it's using so check anacron.timer


_________________________________________________________________________________________________________________________________________________________

DAY 9
Windows artifacts  auditing and logging
________________________________________________________________________________________________________________________________________________________


ARTIFACT: 
UserAssist


Many artifacts will require the operator use a Security Identifer (SID) to dig in user specific registry locations to enumerate the artifact information.
A few ways to achieve this are provided below:

get-wmiobject win32_useraccount | select name,sid (PowerShell)
Get-LocalUser | select Name,SID (PowerShell)
wmic useraccount get name,sid (CMD.EXE ONLY)
    
    ----- use this t identify all users on the device so you can see who has logged into the  box. 
    
    
------------------------------------------------------
USERASSIST:
registry::hkey_usersThe UserAssist registry key tracks the GUI-based programs that were ran by a particular user.

View executable Files run
Get-ItemProperty 'REGISTRY::HKEY_USERS\*\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\Count'


View Shortcut files executed
get-itemproperty 'REGISTRY::HKEY_USERS\*\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Userassist\{F4E57C4B-2036-45F0-A9AB-443BCFE33D9F}\Count'


(gives you a encoded  output  ----- use rot 13 decoder for it  (cyberchef))
-----------------------------------------------------------------------------------
WINDOWS BACKGROUND ACTIVITY MODERATOR (BAM)

bam is enabled by default

BAM is a Windows service that Controls activity of background applications.
Get-Itemproperty 'HKLM:\SYSTEM\CurrentControlSet\Services\bam\UserSettings\*' (Windows 1709 & 1803)
Get-Itemproperty 'HKLM:\SYSTEM\CurrentControlSet\Services\bam\state\UserSettings\*' (Windows 1809 and newer)
 allows you to get the full file path of whatever executabl ewas ran along  with the time it was ran 
 BAM does not have C:\ since it uses full path like 
 S-1-5-21-3815887625-636170824-1205406010-1004                   \Device\HarddiskVolume1\Windows\System32\OpenWith.exe
 		^									^
		|									|
		|									|
	user account that ran it 					the file path (does not contain C:\)
	
if you see C:\ in bam then it's A HUGEEEE RED FLAG like worse than the last relationship bro ... investigation time

------------------------------------------------------------------------------------------------------------------------------------
RECYCLE BIN
The recycle bin is a very important location on a Windows file system to understand. It can help you accomplish a forensic investigation.

gci 'C:\$RECYCLE.BIN' -Recurse -Verbose -Force | select *
gci 'C:\$RECYCLE.BIN' -Recurse -Force
	
	
	$I  ---- original filename
	$R--- actual recycled content
	
	 Get-ChildItem 'C:\$recycle.Bin' -Force -Recurse | ForEach-Object { if (($_.Extension) -like ".txt") {if ($_.Name -like "`$R*") {Write-Host $_.Name -NoNewline ; Write-Host " --> " -ForegroundColor Green -NoNewline
>> ; Get-Content $_.FullName } } }
	
	
	
	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
PREFETCH

Set-Location C:\Windows\Prefetch\

Prefetch files are created by the windows operating system when an application is run from a specific location for the first time.
prefectch allows you go grab the actual binaru of the malicious code that was eecuted 
 
gci | select -First 5
gci -Path 'C:\Windows\Prefetch' -ErrorAction Continue | select * | select -first 5
prefetch ends with .pf 
super fetch is ended with .db
prefetch files store only the last 128 execution. 
disabled by default on servers because it's pointless in  enumeration for host interrogation.

-------------------------------------------------------------------------------------------------------------------------------------------------------
JUMPLIST

only stored in active user's profle
 allows you to view that files were recently \frequently accessed
The Windows 7-10 taskbar (Jump List) is engineered to allow users to “jump” or access items they have frequently or recently used quickly and easily.


gci -Recurse C:\Users\*\AppData\Roaming\Microsoft\Windows\Recent -ErrorAction Continue | select FullName, LastAccessTime, creationtime
gc " C:\Users\student\AppData\Roaming\Microsoft\Windows\Recent\legit_script.lnk"  (to see the actual content afterward to see f you can get any info)



--------------------------------------------------------------------------------------------------------------------------------------------------------
RECENT FILES
Registry Key that will track the last files and folders opened and is used to populate data in “Recent” menus of the Start menu.
Overall key will track the overall order of the last 150 files or folders opened.

List Files in Recent Docs
gci 'REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs'

Convert File Hex to Unicode
[System.Text.Encoding]::Unicode.GetString((gp "REGISTRY::HKEY_USERS\*\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt")."0")
[System.Text.Encoding]::Unicode.GetString((gp "REGISTRY::HKEY_USERS\*\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.*")."4")  
(change the 4 value to all the options from previous command )


Convert all of a users values from HEX to Unicode
Get-Item "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" | select -Expand property | ForEach-Object { [System.Text.Encoding]::Default.GetString((Get-ItemProperty -Path "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" -Name $_).$_)}

BROWSER ARTIFACTS
Stores details for each user account.
History will record the access to the file on the website that was accessed via a link.
.\strings.exe 'C:\Users\<username>\AppData\Local\Google\Chrome\User Data\Default\History'
Find FQDNs in Sqlite Text Files
$History = (Get-Content 'C:\users\<username>\AppData\Local\Google\Chrome\User Data\Default\History') -replace "[^a-zA-Z0-9\.\:\/]",""
$History| Select-String -Pattern "(https|http):\/\/[a-zA-Z_0-9]+\.\w+[\.]?\w+" -AllMatches|foreach {$_.Matches.Groups[0].Value}| ft
WINDOWS AUDITING
--------------------------------------------------------------------------------------------------------------------------------------------------------
BROWSER ARTIFACTS
Stores details for each user account.

History will record the access to the file on the website that was accessed via a link

.\strings.exe 'C:\Users\*\AppData\Local\Google\Chrome\User Data\Default\History'

Find FQDNs in Sqlite Text Files
$History = (Get-Content 'C:\users\student\AppData\Local\Google\Chrome\User Data\Default\History') -replace "[^a-zA-Z0-9\.\:\/]",""
$History| Select-String -Pattern "(https|http):\/\/[a-zA-Z_0-9]+\.\w+[\.]?\w+" -AllMatches|foreach {$_.Matches.Groups[0].Value}| ft
----------------------------------------------------------------------------------------------------------------------------------------------------
______________________________________________________________________________________________________________________________________________________


AUDITING

FIGURE AUDIT POLICY
View entire auditpol list
auditpol /get /category:*

Set File SYstem subcategory to audit
auditpol /set /subcategory:"File System"

Remove File System subcategory auditing
auditpol /set /subcategory:"File System" /success:disable

To list the global object access auditing entries set on files or folders:
auditpol /resourceSACL /type:File /view

To list the global object access auditing entries set on Registry Keys
auditpol /resourceSACL /type:Key /view


WINDOWS EVENT LOGS  - types of logs 
APPLICATION 
SECURITY 
SYSTEM
CUSTOMLOG


 ways to look at event logs are - 
 Eventviewer
 windows event logs ( GUI)
 
  get-Eventlog -logname *                   --------- get's all the log type 
  
  Get-EventLog -LogName Security -Message "*remote*" | ft -wrap     - get's all logs from security that have the word remote in it 
  -----------------------------------------------------------------------------
  VIEW/ ANALYZE EVENT LOGS - CLI
show all logs
wevtutil el

get log info
wevtutil gli security

get last 3 events
wevtutil qe security /c:3 /f:text
  
 View newest 10 System Logs
Get-EventLog -LogName System -Newest 10

View the entire message field in the Security Log
Get-Eventlog -LogName Security | ft -wrap

Search logs with mutiple criteria
get-winevent -FilterHashtable @{logname="security";id="4624"} | select -first 5 | ft -wrap
  
---------------------------------------------------------------------------------
POWERSHELL LOGGING 
 
View newest 10 System Logs
Get-EventLog -LogName System -Newest 10

View the entire message field in the Security Log
Get-Eventlog -LogName Security | ft -wrap

Search logs with mutiple criteria
get-winevent -FilterHashtable @{logname="security";id="4624"} | select -first 5 | ft -wrap
  
  EVENT IDS TO SEARCH FOR MALICIOUS ACTORS    (threat    bad bois )
User Added to Privileged Group
4728, 4732, 4756

Security-Enabled group Modification
4735

Successful/ Failed User Account Login
4624, 4625

POWERSHELL TRANSCRIPT
Allows the capture of the input and output of Windows PowerShell commands into text-based transcripts.
Start-Transcript

View Powershell console History
Get-History

View entire powershell History
Get-Content "C:\users\$env:username\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt"

SCRIPT BLOCK LOGGING
Logs detailed processing of commands, script blocks, functions, and scripts to the Microsoft-Windows-PowerShell/Operational event log.

Logging is enabled through the Turn on PowerShell Script Block Logging Group Policy setting in
Administrative Templates → Windows Components → Windows PowerShell

Turn on script black logging via the Registry
reg.exe add HKLM\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging\ /v EnableScriptBlockLogging /t REG_DWORD /d 1 /f


  
_________________________________________________________________________________________________________________________________________________
 DAY 10
 LINUX LOGGING
_______________________________________________________________________________________________________________________________________________

SYSLOG 								JOURNALD
RFC 5424			log rotation			SystemD
text based 							Binary files 
universal across unix alike					read w/ journalctl !!!
default								can output in various formats 
boring" ssgt harris						the tesla of linux logging --- ssgt harris 


SYSLOG
------
Logging 
PROS
Remote Logging
Main system crashes
Becomes compromised

Historical analysis
Record of anomalous activity
Diagnostics of a failure

CONS
Logs can cryptic
Logging is not free
Logging too much/little

Not analyzing logs
Not looking at the right logs
Time Normalization
Confirmation of critical systems usage


------------------------------------------------------------------------------------------------------------------
LOG TYPES 1
Authentication
/var/log/auth.log - Authentication related events
/var/run/utmp - Users currently logged in
/var/log/wtmp - History file for utmp
/var/log/btmp - Failed login attempts


to check  these file you do last -f /var/run/utmp
from creation of pam_unix to disconnect is your session.
(commands )

-----------------------------------------------------------------------------------------------------------------

Application
apache - Web Server (dir)
apt - Package Manager (dir)
/var/log/mysql.log

from creation of pam_unix to disconnect is your session.

System
/var/log/messages - Legacy Catch all
/var/log/syslog - Ubuntu/Debian Catch all
dmesg = Device Messenger (queires /proc/kmsg)
Kernel Ring Buffer - Never fills
First logs generated by the system

LOGGING AT A GLANCE
Location : /var/log
Config File : /etc/rsyslog.conf
Service : /usr/sbin/rsyslogd


LOGGING DAEMON
/usr/sbin/rsyslogd
User space daemon - Reads messages written to /dev/log and formats and stores them based on /etc/rsyslog.conf rules.
syslog() via libc
kernel ring buffer
audit records via audit subsystem (auditd)
auditd daemon is where the audit happends 

 
CONFIG FILE
/etc/rsyslog.conf
tail -n40 /etc/rsyslog.conf
 
Log entries follow syslog standard facility.severity
facility = what program, or part of system, log is from
severity = urgency

 sorted by facility first, then by severity to what each ones is.

FACILITY CODES
0   kernel messages
1   user-level messages
2   mail system
3   system daemons
4   security/authorization messages
5   messages generated internally by syslogd
6   line printer subsystem
7   network news subsystem
8   UUCP subsystem
9   clock daemon
10  security/authorization messages
11  FTP daemon
12  NTP subsystem13|log audit


SEVERITY CODES
0  emerg, panic:  Emergency: system is unusable
1  alert:         Action must be taken immediately
2  crit:          Critical conditions
3  err, error:    Error conditions
4  warn, warning: Warning conditions
5  notice:        Normal but significant condition
6  info:          Informational messages
7  Debug:         Debug-level messages


if you see @@sign in the info of  rsyslog.conf followed by an ip:port then there's remote logging happeneing 

-------------------------------------------------------------------------------------

LOG ENUMERATION / MANAGEMENT
Best Practices
Meaningful Naming Schema
Separate logs logically and by precedence
Sync time across network
Control log access
Utilize cron jobs / scripts
logrotate
/etc/logrotate.conf
How large to let files get. How long to keep them.

USEFUL LOGGING COMMANDS
tail -f - Continuously show end of file
less /var/log/syslog - View Log in page viewer
logger - Send a user generated message to system Log i.e. Starting Update
> /var/log/messages - Wipes Logs
Why do this as opposed to deleting/recreating files?
last -f /var/log{wtmp,btmp} - Needed to view data files

--------------------------------------------------------------------------------------------------
AUDITING VS LOGGING
Logging is system/application defined
Auditing is user defined
[kauditd] - runs at the kernel level and can monitor individual syscalls (/sbin/auditd)
auditctl - control/config command
aureport - summary reports of audit logs
ausearch - query audit logs


__________________________________________________________________________________________________________________________________________________________
DAY 10
Memory Analysis
-------------------------------------------------------------------------

MEMORY
Volatile Memory

Non-persistent

Requires power to maintain the stored information; it retains its contents while powered on but when the power is interrupted, the stored data is immediately lost

RAM
Non-Volatile Memory

Persistent

Does not require a continuous power supply to retain the data stored in a computing device
HDD
USB

WHY IS THIS IMPORTANT?
Data that has not been stored on disk yet is present in memory

Files that have been deleted or modified can be scraped from RAM and used as evidence or for timelining an attack

Examples:

Bash history is written to .bash_history once the terminal session is terminated, however each command that has been ran during the current 
terminal session resides in RAM and can be viewed using the bash plugin
If the ~/.bash_history has been deleted, using the same method as above we can still retrieve all commands executed

Logs that have been deleted or modified can be read and scraped from memory using the mfind mcat & mls plugins

MEMORY ANALYSIS
Analyzing a system’s RAM to determine information about running programs, the operating system, and the overall state of a computer


 ORDER OF VOLATILITY - THE HALFLIFE OF DATA
CPU registers, cache

Routing table, ARP cache, process table, kernel stats, memory
Temporary file systems
Disk  
Remote logging and monitoring data
Physical configuration, network topology
Archival media - backups

VOLITILITY:
Memory Analysis framework

.\volatility_2.6_win64_standalone.exe -f ".\cridex.vmem" imageinfo     ----- you can specify  as many plugins as you want after you specify the file.

Volatility provides cross-platform solutions on Windows, Mac OSX, and Lin
Each operating system has its own memory acquisition tool called Persistent Memory (pmem)

Linpmem

Winpmem

OSXpmem



.\volatility_2.6_win64_standalone.exe -f ".\cridex.vmem" --profile=WinXPSP2x86 procdump -p 1640 -D .     (-p for port and -D for  direcotry to look at ) 

Volatility Foundation Volatility Framework 2.6
Process(V) ImageBase  Name                 Result
---------- ---------- -------------------- ------
0x81e7bda0 0x00400000 reader_sl.exe        OK: executable.1640.exe

.\volatility_2.6_win64_standalone.exe -f ".\cridex.vmem" --profile=WinXPSP2x86 memdump -p 1640 -D . - memdump to get a memory dump to see what it was doing 
	
	
to mount sysinternals do 
 net use * \\live.sysinternals.com\tools


to call use specificly the drive it was mounted to 
	
z:\strings.exe -accepteula "1640.dmp" > 1640.txt


.\volatility_2.6_win64_standalone.exe -f ".\cridex.vmem" --profile=WinXPSP2x86 connections 

---- checks for connections 
( can  also use notepad++ and use regex to  find ip) 

.\volatility_2.6_win64_standalone.exe -f ".\cridex.vmem" --profile=WinXPSP2x86 connscan
 ---- gives you active and recently closed tcp connection.

psscan gives you the physical location of the memory addresses.
to see all what dll an executable is using you can do dlllist
dlldump to grab the dll 
hivedump --- dump hive
hivelist ---- list all your hives
dumpregistry ------ dumps it all ( crazy mfers)
.\volatility_2.6_win64_standalone.exe -h to get help on all the different options for plugins
-------------------------------------------------------------------------------------------------------------------------------------------------'

VOLATILITY INSTALLATION
Installing the Python version of Volatility
Download python < 3.0
Click "Add python to path"
Download Volatility from git
Run install: setup.py install

INSTALLATION CONT.
Some dependencies are missing. Need to install:
diStorm3
click "distorm3-3.3.4.win-amd64.exe"
Visual C++ Compiler
pyCrypto or python -m pip install pycrypto
Yara for python 2.7
openpyxl: python -m pip install openpyxl
ujson: python -m pip install ujson

________________________________________________________________________________________________________________________________________________________
DAY 12
________________________________________________________________________________________________________________________________________________________
Group Nesting

What security flaw does group nesting create?
ANS----AD nested group enumeration demo


Local Administrator Logon:
Never login as administrator
RUNAS
Default local administrator disabled
----------------------------------------------------------------------------------------------------------------------
Group Policy Object Queries:
gpresult
Get-GPResultantSetOfPolicy
Demo
----------------------------------------------------------------------------------------------------------------------------
gwmi win32_service | where { $_.name -like "adws" -or $_.name -like "kdc" -or $_.name -like "netlogon" -or $_.name -like "dns" } | select name,state,status
 -- looking for the 4 maiun services  for a domain controller for it  actually run. which are the following.  -
 name     state   status  
ADWS     Running 	OK
DNS      Running 	OK
Kdc      Running 	OK
Netlogon Running 	OK


[  Get-ADDomainController  ]

 Get-ADDomain army.warriors     - checks configuration for the current domian we looking at 
 Get-ADForest army.warriors
 
 
 get-smbshare  ( check for netlogon and sysvol to see if it's there or not) ( all shares needed to see if your domain controller is working or not.
 
 
 
 --------------------------------------------------------------------------------------------
 Get-Command -Module ActiveDirectory
  get all command that are  part of the active directory 
   Get-Module ActiveDirectory 
   
   Get-ADGroup -Filter * | select Name , GroupCategory, Groupscope 
   
 
   Get-ADGroupMember -Identity "domain Admins"
   Get-ADGroupMember -Identity "domain Admins" -Recursive
    - get a lot more information 
    
---------------------------------------------------------------------------------------------------------------------------------------------------------
Suspicious Activity:

Unknown admin accounts
Active outside normal work hours
Nested groups
Service accounts logging into hosts
User accounts logging into critical infrastructure (i.e. Domain Controller)

-----------------------------------------------------------------------------------------------------------------------------------------------------
DSTOOLS:
    DSADD
    DSGET
    DSMOD                      (NOT Fesable anymore ---outdated)
    DSMOVE
    DSQUERY

PowerShell AD Commands

(VERB)-AD(NOUN)

Examples
Get-ADUser
New-ADUser -Name "Bad Guy" -PasswordNotRequired 1 -Path "OU=3RD LPT,OU=CCO,OU=3RDBN,OU=WARRIORS,DC=ARMY,DC=WARRIORS"

Get-ADUser -Filter * -Properties * |select -First 10    --- getting hte first 10 users 

Get-ADUser -Filter * -Properties *| where{ $_.AllowReversiblePasswordEncryption -eq $true } |select name   ( to grab a specific property you wanna compare) 

Search-ADAccount -AccountDisabled   ----- to check  for all disabled users on the machine

Search-ADAccount -AccountExpired |select name     all expired account on the active directory.

### Get-ADUser -Filter * -Properties * |where { $_.<property> -like "*<pattern to match>*" } | select name <whatever property>  
Get-ADUser -Filter * -Properties * |where { $_.officephone -like "*1234*" } | select name,  officephone 
Get-ADUser -Filter * -Properties * |where { $_.description -like "*Built*in*" } | select name 
