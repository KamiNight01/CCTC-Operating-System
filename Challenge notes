-----------------------------------------------------------------------------------------------------------------------------------------------------------
1.Identify the file mapped to the fourth file descriptor (handle) of the cron process.
HINT: There might be multiple cron processes, but only one with the answer.
Flag format: /absolute/path

sudo lsof -c cron


---------------------------------------------------------------------------------------------------------------------------------------------------
Examine the process list to find the ssh process. Then, identify the symbolic link to the absolute path for its executable in the /proc directory.

The flag is the absolute path to the symbolic link, and the file it is linked to.

Flag format: /absolute/path,/absolute/path

 ps -elf | grep ssh
 sudo ls -lisa /proc/1592

________________________________________________________________________________________________________________________________________________
Find the questionable website that the user browsed to (using Chrome), that appears to be malicious.

$History = (Get-Content 'C:\users\student\AppData\Local\Google\Chrome\User Data\Default\History') -replace "[^a-zA-Z0-9\.\:\/]",""
$History| Select-String -Pattern "(https|http):\/\/[a-zA-Z_0-9]+\.\w+[\.]?\w+" -AllMatches|foreach {$_.Matches.Groups[0].Value}| ft

https://www.exploitdb.com
https://www.exploitdb.com

---------------------------------------------------------------------------------------------------------------------------------------------------------

There is a file that was recently opened that may contain PII.
Get the flag from the contents of the file.
Hint: We're not interested in numbers.

Get-Item "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" | select -Expand property | ForEach-Object { [System.Text.Encoding]::Default.GetString
((Get-ItemProperty -Path "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" -Name $_).$_)}



------------------------------------------------------------------------

What is the creation time of the questionable file in the prefetch folder?
Flag format: mm/dd/yyyy

gci -Path 'C:\Windows\Prefetch' -ErrorAction Continue  |select FullName, LastAccessTime , CreationTime 
-----------------------------------------------------------------------

Check event logs for a flag string.
Machine: file-server

get-EventLog -LogName System -Message "*flag*" | ft -wrap   

-----------------------------------------------------------------------------------------------------------------

File: /home/garviel/conn.log
Use jq to pretty print the JSON file conn.log.
Hash the pretty-printed file with md5sum for the flag.
Sample JSON "Pretty Print" Output (without piping to MD5SUM)


  "ts": 1615383120.585641,
  "uid": "C9ybUDHykHdrh0h93",
  "id.orig_h": "10.50.24.73",
  "id.orig_p": 38156,
  "id.resp_h": "192.168.65.20",
  "id.resp_p": 443,
  "proto": "tcp",
  "duration": 2.8133392333984375e-05,
  "orig_bytes": 0,
  "resp_bytes": 0,

HINT:
https://jqplay.org/
https://docs.jsonata.org/simple
https://stedolan.github.io/jq/manual/

jq '.'  conn.log | md5sum 

_____________------------------------------------------------------------------------------
File : /home/garviel/conn.log
This file is a conn.log made in Zeek (Bro) with data about TCP/IP connections.
Use jq to locate and count the unique originating endpoint IP addresses in the file. Enter the number of unique originating IP addresses as the flag.
Flag format: #
HINT: Use this link to understand the JSON object’s attributes
http://gauss.ececs.uc.edu/Courses/c6055/pdf/bro_log_vars.pdf

jq '."id.orig_h"' conn.log |sort | uniq | wc -l

----------------------------------------------------------------------------------------------------------------------------------
File: /home/garviel/output.xml
Parse all of the IP addresses from the file using XPATH queries
https://www.w3schools.com/xml/xpath_intro.asp
HINT:
http://xpather.com/
http://www.whitebeam.org/library/guide/TechNotes/xpathtestbed.rhtm
Sample Output (without piping to MD5SUM)
 addr="XXX.xxx.xxx.xxx"
 addr="XXX.xxx.xxx.xxx"
 addr="XXX.xxx.xxx.xxx"
 addr="XXX.xxx.xxx.xxx"
 addr="XXX.xxx.xxx.xxx"
 addr="XXX.xxx.xxx.xxx"
--TRIMMED--
Flag format: md5 hash of output

xpath -q -e '//@addr'  output.xml  |md5sum 

---------------------------------------------------------------------------------------------------------------------------------------

File: /home/garviel/output.xml
Select all of the IP addresses and ports using a single XPATH Union Statement
Pipe the result to md5sum for the flag
HINT:
https://librarycarpentry.org/lc-webscraping/02-xpath/index.html
Sample Output (without piping to MD5SUM)
addr="xx.xxx.xx.xx"
 addr="xx.xxx.xx.xx"
 addr="xx.xxx.xx.xx"
 addr="xx.xxx.xx.xx"
 portid="xx"
 addr="10.50.29.6"
 addr="xx.xxx.xx.xx"
 portid="22"
--TRIMMED--

xpath -q -e '//@addr|//@portid'  output.xml | md5sum 

------------------------------------------------------------------------------------------------------------------------------------
Use the log file attached to this for all Whut questions.
How many unique users logged into this machine?

grep "session opened" log.txt 

-----------------------------------------------------------------------------------------------------------------------------------------------




xpath -q -e '//@portid/ancestor::host/address/@addr | //@portid' output.xml 2>/dev/null | md5sum 

# @portid = /nmaprun/host/ports/port/@portid   ||  @addr = /nmaprun/host/address/@addr 


------------------------------------------------------------------------------------------------------------------------------------
Scenario: Analysts have found a dump of commands on the Internet that refer to the Terra machine. The command history for one of the users with an interactive login is being stolen via unknown means. The network analysts can’t find any persistent connections, but notice a spike in traffic on logon and logoff.

Task: Identify how the command history is stolen from the machine.

The flag is the file used to execute the commands, and where they are sent.

Flag format: /absolute/path/to/file,IP:port

Machine: Terra

cat /etc/passwd | grep bin/bash
 ls -lisa
 cat .bash_logout
-----------------------------------------------------------------------------------------------------------------------------------------

What PowerShell command will list domain groups?
get-Adgroup

----------------------------------------------------------------------
Find the unprofessional email addresses. List the email's domain.?

Get-ADUser -Filter * -Properties * | where {$_.mail -notlike "*mil@mail.mil*" } | select name, mail

--------------------------------------------------------------------------------------------------------------------------------------------------------
The flag is the unprofessionally-named file located somewhere on the Warrior Share.

Connect to the Warrior Share:

net use * "\\file-server\warrior share"


Get-ChildItem .\ -Recurse -File 

--------------------------------------------------------------------------------------------------------------------------------------------------
Find the following three accounts:

    two accounts with passwords that never expire
    one account that has its password stored using reversible encryption

List the last names in Alphabetical Order, comma-separated, no spaces. Do not list built-in accounts.

Flag format: name,name,name

Get-ADUser -Filter * -Properties *| where{ $_.PasswordNeverExpires -eq $true } |select name
Get-ADUser -Filter * -Properties *| where{ $_.AllowReversiblePasswordEncryption -eq $true } |select name

------------------------------------------------------------------------------------------------------------------------------------------------------
How many users are members of the Domain Admins group?

HINT: No sub-groups.

(Get-ADGroupMember -Identity "domain Admins" ).count

-------------------------------------------------------------------------------------------------------------------------------------------------------
Scenario: Text files are being exfiltrated from the machine using a network connection. The connections still occur post-reboot, 
according to network analysts.
The junior analysts are having a hard time with attribution because no strange programs or ports are running, 
and the connection seems to only occur in 60-second intervals,every 15 minutes.
Task: Determine the means of persistence used by the program, and the port used. The flag is the command that allows exfiltration,
and the file its persistence mechanism uses.
Flag format: command,persistence
Machine: Terra

htop
dmesg
systemctl cat  whatischaos.timer
systemctl cat  whatischaos.service 

----------------------------------------------------------------------------------------------------------------------------------


Scenario: The web server has been modified by an unknown hacktivist group. Users accessing the web server are reporting crashes and insane disk usage.

Task: Identify the Cyber Attack Method used by the group, and the command running.

Flag format: method,command

Machine: Terra

Try not to break your machine on this one...


DOS ( denial of service)
htop
/bin/bash -c /bin/apache3 -lp 443 < /dev/urandom


-----------------------------------------------------------------------------------------------------------------
