sudo apt-get install  oneko





reg query "HKEY_Users\S-1-5-21-2881336348-3190591231-4063445930-1003\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\RUN" 




Get-ChildItem "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList"




Get-ChildItem "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\NetworkList\Profiles"


_________________________________________________________________________________________________________________________________________________________
DAY 3
----------------------------------------------------------
LINUX 

create an alias for out linux opstation.

Host linops
    Hostname 10.50.40.254
    User student
    Port 22

 ---------------------------
 
 chmod 600 .ssh/config 
 ssh-keygen
 ssh-copy-id linops



vim .bash_aliases


-----------------------------------------------------------
HOST enumeration 
 step to check when you get into the box 
 
 where am i?  hostname /uname-a
 
who am i? whoami / id

what am i allowed to do ?   sudo -l

what's going on ? who / w / ps-elf


what's that 

why is that happenening ? 

how is that happening ? 

what's in there ? 




FILES:



man  hier
 Root
  /bin
  (/usr/bin)  or (/usr/localbin) ---- which holds th binaries  such as cat 
  
  
  sbin
  (/usr/sbin)---- system binaries 
  
  /Home - directory that is the default for the user's home directory
  
  /usr     = universal  syste, resources any file designed to be used accors the entire system.
  
  /etc     ---- everything that's configrational
  
  
  
  
  /var  --- thing' that are likely to change mostly logs
  
  /boot   --- holds the bootprocess, read  during bot process.
  
  
  /dev -- has all the strign cuh as strin/strout/trerr
  
  
  /lib 
   --- libraries
   
   
   /MOUNT -- to e used for permiately mount 
   
   /media     
   
   
   /opt   -optional 
   
   /run      run-time variable data 
   /tmp   --- temporarry files  - everyone has access 
   
   /proc ----processes
   
   
   --------------------------------------------------------
   users/groups 
    /etc/passwd - holds the list of al the userso n the system 
    
   
   
   _-------
   
   /etc/passwd  
   nginx:x:100:101:nginx:/var/lib/nginx:/sbin/nologin
   Username:Password:User ID (UID):Group ID (GID):comments:Home directory:Home directory: 
   
   _____________________________________________________________________________________________________________
   
   Using the commands ls and grep, identify the number of directories in /etc/ that end in .d
   
   
   ls -l /etc | egrep '\.d$' |wc -l 
   
   
   
   Use regular expressions to match valid IP addresses. The flag is the number of addresses.

HINT: What are the valid numerical values of each octet in an IP address?

   
   egrep '^((25[0-5]|2[0-4][0-9]|[1]?[1-9][0-9]?).){3}(25[0-5]|2[0-4][0-9]|[1]?[1-9]?[0-9])$' numbers |wc -l 



___________________________________________________________________________________________________________________________________________
DAY5
WINDOWS BOOT PROCESS AND BCD EDIT
-------------------------------------------------------------------------------------------------------------------------------------------

 POST
 
 BIOS                                       UEFI
 -uses MBR                                  -uses GPT
 
 MBR is the first 512 bytes on the drive. it can only have up to 4 active partition.
 with sub partitions up to 26 total. 
 
 
 1.-----
 Ntoskrnl.exe --
 
 loads driver 
 then loads the KHLM
 then starts the page files.
 ---- 
 2. 
 system creates  smss 
 smss forks into two sessions session0 and 1. session 0 is assigned to system 
and session 1 is assigned to user.
 
 
 
                    -----------SMSS.exe (session 0)           
 SYSTEM ----> SMSS       forks to 2 different session 
                    ------------ SMSS.exe (session1)
 
 
 _______________________________________________________
 https://www.docdroid.net/h44QP8i/mod-7-second-part-docx
 https://www.docdroid.net/I2icaX7/mod-7-part-1-docx#page=7
 ______________________________________________________
 
 how to find out what mode you are using  either UEFI or BIOS 
 
 type C:\windows\panther\setupact.log | findstr /i "detect boot enviroment"
 bcdedit | findstr /i winload
 bcdedit | findstr /i winresume
 
  ( to find the current identifier do bcdedit )
  
  
___________________________________________________________________________________________________________________________________________________

LINUX BOOT PROCESSS
DAY 6
---------------------------------------------------------------
BIOS
MMBR
GRUB
Kernel
Init
Runlevels


sudo dmidecode -t bios
 
 lsblk - shows which disk are in the system and where they are mounted 

df -h shows you what is mounted na where it's mounted and  how muh =ch soace is used
 
 sudo xxd -l 512 -g 1 - gives you the hex dump of a file.

eb is the hex representation of jump to that position. (hex 90 is noop)

sudo parted -l shows wheter you have bios or gpt.


sudo dd if=/dev/sda of=MBRoutcast bs=1 count=512
xxd MBRoutcast 

configuration file for GRUB is 
/boot/grub/grub.cfg

everything in the menu item  will be run if the menu item is selected.


`---------------------------------------------------------------
set linux_gfx_mode=auto
export linux_gfx_mode
menuentry 'Ubuntu' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-LABEL=cloudimg-rootfs' {
	recordfail
	load_video
	gfxmode $linux_gfx_mode
	insmod gzio
	if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
	insmod part_msdos
	insmod ext2
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root  6c0fba3b-b236-4b3a-b999-db7359c5d220
	else
	  search --no-floppy --fs-uuid --set=root 6c0fba3b-b236-4b3a-b999-db7359c5d220
	fi
        linux	/boot/vmlinuz-4.15.0-76-generic root=LABEL=cloudimg-rootfs ro  console=tty1 console=ttyS0
	initrd	/boot/initrd.img-4.15.0-76-generic  
    
     (linux  thta's the command that loads the kernel) 
     initrd loads the basic systems where all the drivers are preloaded)
     
--------------------------------------------------------------------------------------------------------
Kernel - manages the interaction between the os and the hardware.

lsmod - lists all the modules on the system and who utilizes them 
 ps -p1 
 
 ls -l /sbin/init
 lrwxrwxrwx 1 root root 20 Nov 15  2019 /sbin/init -> /lib/systemd/systemd
 to see if you are in system 5 or systemd. 
 init(sysV) - service/process manager

to see the run level 
ls /etc/rc3.d

or ls /etc/rc1.d tp see the kill order

cat /etc/inittab to see the current run level  ( check if it's doing something weird)
/etc/init.d   where all the  S and K scripts are in  (start and kill ) 
 all scripts should be in etc/init.d ( ls -l  /etc/rc3.d)

RUN LEVELS 

0 - halt (Do NOT set initdefault to this)
1 - Single user mode (switched from multi-user)
2 - Multiuser, without networking
3 - Full multiuser mode, with networking
4 - unused
5 - X11 (GUI)

‘ls -l /etc/rc<1-6>.d’ to see different services run in each runlevel

 to see the current run level 
  ls -lisha  /lib/systemd/system/default.target 
8499 0 lrwxrwxrwx 1 root root 16 Nov 15  2019 /lib/systemd/system/default.target -> graphical.target

cat /lib/systemd/system/default.target        (used to house services that are created by package maintaners)

cat /etc/systemd/system/display-manager.service    ( for user created services)

cat/usr/lib/systemd/system


systemctl list-dependencies graphical.target
 ecerything that's below (multi-user-target0 are wants 
 everything  1 stop under graphical.target is required
 
 systemctl show -p Wants  graphical.target
 
 
 
 systemctl cat graphical.target   to show info about it aswell as ind the location)
 
 
/lib/systemd/system/graphical.target

 systemctl list-unit-files
 


cat /etc/environment    all global variables 
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"

/etc/profile  --- persistance

 
sudo dd if=/dev/sda of=MBRoutcast bs=1 count=512


 to get default run level on sysV do   cat /etc/inittab 





egrep '^([0-9a-fA-F][02468ACE]-)([0-9a-fA-F]{2}-){4}[0-9a-fA-F]{2}$' numbers  | wc -l   --- regex for unicast mac address



______________________________________________________________________________________________________________________________________________________
DAY 7 
NOTES
______________________________________________________________________________________________________________________________________________________

tasklist --- lsit all running tasks 
 get-process  -  same as tasklist 
 A process is an instance of a particular executable (.exe program file) running. 
 A service is a process which runs in the background and does not interact with the desktop.
  process requires interaction. 
  dll( dynamic linked libraries) - contains pointers to resources for other programs to interact with. 
  
  
  
  Get-WmiObject win32_process 
  Get-CimInstance  win32_process to get a deeper look at  processes.
  Get-CimInstance  win32_process | select *    ----- to get more detailed listing)
  
  Get-CimInstance  win32_process | where -Property name -like *LSASS* | select *     ----- to select a specific one 
  Get-CimInstance  win32_process | where {$_.Name -like "*LSASS*"} | select *
  
  virustotal.com   ( to check for a binary ) 
  
HOW TO LOOK at handles  to verify the legitimacy of a dll to see if it's coming from the correct location 
get-process -name lsass
Get-Process -Name lsass  | select -ExpandProperty Modules | out-file C:\Users\student\Desktop\handles -Width 4096
Get-Process -Name lsass  | select -ExpandProperty Modules | format-table


how to look at hidden/services 
get-service --- to see a list of the services 
get-content
sc.exe showsid AJRouter   to get the service sid of Ajrouter   ( careful with this tho cause it could lead to false positive to verify with a second method.)

 Get-WmiObject win32_process | Select-Object -Property name, processID, ParentprocessID, path, commandline | ft

sc.exe queryex type=service state=inactive   
 it shows active stuff by default so state should be specified.


Get-Process -Name powershell  | select -ExpandProperty Modules | format-table -Wrap

____________________________________________________________________________________
scheduled tasks 
------------------------------------------------------
schtasks.exe /query /tn "\Microsoft\XblGameSave\XblGamesavetask"

 schtasks.exe /query /tn "GoogleUpdateTaskMachineCore{A05072F6-D535-4655-AC8C-C1AF3F6F7956}" /v | format-list

netstat -anob
get-nettcpconnection

----------------------------
sys internals 
-------------------
process explorer  --- allows you to suspend a process instead of killing it 

tcpview - 

procmon   - registrry monitor and process listing to be used for monitoring the boot process.  ( start it go to file - options - enable boot login - every second 
-  enable - restart save  temp copy and when it starts back up  and it will hold the process monitors - very useful for finding bootkits)
( use the script given by ssgt)


 autoruns64 ----- reads the registry and extensions point and detects to see what starts automatically. 
 so checks for persistance/ startup applications / drivers / scheduled tasks  as well as scans the registry.
  when chechking autorun it should never say file not found.
 
 
 handles ----
 
  if it says checks the  permissions of a file  you might wanna google find effective permissions  sysinternals( USEFUL)

______________________________________________________________________________________________________________________________________________________
UAC -user access control
______________________________________________________________________________________________________________________________________________________
Auto Elvate is True

./strings C:\Windows\System32\*.exe -accepteula | select-string -SimpleMatch "autoelevate"

Digitally Signed

./sigcheck -m C:\Windows\System32\slui.exe -accepteula | Select-String -SimpleMatch "level"

Trusted Directory

i.e C:\Windows\System32


------------------------------------
What Sysinternals tool can view permissions?
ans -accesschk

----------------------------------------------
What Sysinternals tool shows malware persistence locations in tabs within its GUI?
ans -
--------------------------------
What Sysinternals tool shows malware persistence locations in tabs within its GUI?
auto runs
---------------------------------------------
What Sysinternals tool can be used to investigate network connection attempts?
ans- tcpview

___________________________________________________________________________________________________________________________________________________________
day 8
linux process validity 
___________________________________________________________________________________________________________________________________________________________
process - a running list of current process 

ps-elf     ( everything , long listing and format)
gives you a snapshot of the current running process 

here are two primary processes after startup:

For kernel-space processes [kthreadd] ( PID = 2 )

For user-space processes /sbin/init ( PID = 1 )

All kernel processes are fork()ed from [kthreadd] and all user processes are fork()ed from /sbin/init or direct ancestor.

Kernel processes are typically used to manage hardware, are directly handled by the kernel,have their own memory space, and have a high priority.

They can be identified by the name enclosed in square brackets [] (using the -f option with ps). kthreadd spawned processes will have a PPID of 2.

The kernel starts /sbin/init which is the parent/grandparent of all user processes.

 if a process is [bracketed] it's forked from the kthreaded process with a pid of 2.
 
 
ps -Nlf --ppid 2
gives you everything that does not have a parent pid of 2.

ps -elf --forest
shows you how the command ran and also what order it was executed from.  in tree branching format
 
 ps -Nlf --ppid 2 --forest | grep  -B 8 ps      (-B or -A gives you the specific amount that you want before or after the string was found)
  ps -Nlf --ppid 2 --forest | grep --context=8 ps   this one gives you 8 lines above and 8 lines below 


----------------------------------------------------------------------------------------------------------------------
top    (htop  is a better option)
gives you the running processs  (dynamic)
f to add new field , 
shift + v gives you a heirarchical view of the running processes.

htop - active running process 
press f5 to get it as tree view 
f2 to setup that allows  you to customze and add more options 
----------------------------------------------------------------------------------------------------------------------
Kernel Space vs user space 
The kernel processes run in its own memory space. User processes run in a separate memory space. Code running in kernel mode has unrestricted access
to the processor and main memory. This is a powerful but dangerous privilege that allows a kernel process to easily crash the entire system. 
The area that only the kernel can access is called kernel space.User mode, in comparison, restricts access to a (usually quite small) 
subset of memory and safe CPU operations. User space refers to the parts of main memory that the user processes can access. 
If a process makes a mistake and crashes, the consequences are limited and can be cleaned up by the kernel. This means that if your web browser crashes,
it won’t take down the system

---------------------------------------
system calls
----------------------------------------
A system call is an interaction between a process and the kernel.
Two system calls, fork() and exec(), are important to understanding how processes startup:
fork() When a process calls fork(), the kernel creates a nearly identical copy of the process.
exec() When a process calls exec(program), the kernel starts program, replacing the current process.



---------------------------------------------------------------
every daemon is a orphan but not every orphan is a daemon  
---------------------------------------------------------------
ORPAHN:
Orphan - Parent process exited, adopted by sbin/init with PPID of 1.
All daemons are orphans
disown -a && exit # Close a shell/terminal and force all children to be adopted
 init or systemd  adopts all orphan process with  an ppid of 1 
 
 ZOMBIE:
  Z in state field 
 ZOmbie is a process that compreted it's process bit never got the terminate signal from the ppid.
 Zombie (defunct) - completed process, but still has an entry in the process table, waiting on parent to acknowledge or terminate.
Zombie can’t be terminated with kill since it has already finished execution, unless the parent process that spawned it is killed.
Do not use resources, but do take up an entry of the process table which is a finite resource.

------------------------------------------------------------------------------------------------------------- 
DAEMONS:
Program that runs as a background process (Ex. syslogd, sshd, cron)
All daemons are Orphans, but all orphans are not Daemons
A daemons purpose is to manage/monitor a service: {status, start, restart}
‘man cron’ - to see an example of a daemon that starts during the boot process
Persistence - Daemons are service that should run for duration of system operation, since init is parent, would require shutdown for parent to die.
Malicious processes are sometimes orphaned and named to make it look like a daemon process ‘ps --ppid 1 -lf’
---------------------------------------------------------------------
JOBS :

‘jobs’ - Display List of Jobs running in the background
‘fg’ or ‘bg’ - Push / Pull jobs to / from the foreground / background
‘kill %<job number>’ - Terminate the process by job number
‘[ctrl -z]’ or ‘kill -19’ - stop / suspend the job
‘kill -9 <PID>’ or ‘pkill -9 <process name>’
Stop Process = SIGSTOP(19) (pause signal, let’s you continue later, does not kill process)
End Process = SIGTERM(15) (termination signal, the right way, the application can intercept this signal and initiate shutdown tasks such as temp file cleanup)
Kill Process = SIGKILL(9) (kill signal, extreme, only use if SIGTERM doesn’t work, won’t initiate shutdown tasks)

list of all kill signals 
Kill -l 
1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL       5) SIGTRAP     
 6) SIGABRT      7) SIGBUS       8) SIGFPE       9) SIGKILL     10) SIGUSR1     
11) SIGSEGV     12) SIGUSR2     13) SIGPIPE     14) SIGALRM     15) SIGTERM     
16) SIGSTKFLT   17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP     
21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU     25) SIGXFSZ     
26) SIGVTALRM   27) SIGPROF     28) SIGWINCH    29) SIGIO       30) SIGPWR      
31) SIGSYS      34) SIGRTMIN    35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3  
38) SIGRTMIN+4  39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8  
43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13 
48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12 
53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7  
58) SIGRTMAX-6  59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2  
63) SIGRTMAX-1  64) SIGRTMAX


--------------------------------------------------------------------------------------------------------------------------------------
Cron Jobs:
 locations:    
 /etc/crontab
 /etc/cron.d        ---- system cron jobs 

/var/spool/cron      ----- user cron jons 



crontab 
-e edits 
-l lists jobs 
-l -u lists other users jobs 
-e -u  edits other users jobs


cron daemon checks the directories /var/spool/cron, /etc/cron.d and the file /etc/crontab,
once a minute and executes any commands specified that match the time.
Two types of cron jobs
System cron jobs
run as root and rigidly scheduled
perform system-wide maintenance tasks (Cleaning out /tmp or rotating logs)
controlled by /etc/crontab
User cron jobs
Use 'crontab’ command to create user cron jobs
stored in /var/spool/cron/crontabs/
`crontab -u [user] file’ - sets users crontab file to the contents of listed file
‘crontab -l -u [user]’ - Displays user’s crontab contents
‘crontab -r -u [user]’ - Removes user’s crontab contents
‘crontab -e -u [user]’ - edits user’s crontab contents
crontab jobs run with the permissions of the owner of the crontab file
* * * * * /directory/and/command
| | | | |
| | | | +---- Day of the Week   (range: 0-7, 1 = Monday)
| | | +------ Month of the Year (range: 1-12)
| | +-------- Day of the Month  (range: 1-31)
| +---------- Hour              (range: 0-23)
+------------ Minute            (range: 0-59)


--------------------------------------------------------------------------------------------
PROC Directory 

la /proc ---- holds all the process ids

lsof  it's lists all the open files for the processes on the system.

sudo lsof -p  <sshd pid>

sudo lsof -p 10161 -c sshd

----------------------
 list unit
 
sudo systemctl list-units --all

sudo systemctl list-units --all --type service

----------------------------------------

 socket -made of a socket and a port 


if something is happening regularly and you cant find it in cronjobs then check the timer file which can be attached to it 
sudo systemctl list-units --all --type timer      -------to see the one it's using so check anacron.timer









