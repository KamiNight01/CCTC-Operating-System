-----------------------------------------------------------------------------------------------------------------------------------------------------------
1.Identify the file mapped to the fourth file descriptor (handle) of the cron process.
HINT: There might be multiple cron processes, but only one with the answer.
Flag format: /absolute/path

sudo lsof -c cron


---------------------------------------------------------------------------------------------------------------------------------------------------
Examine the process list to find the ssh process. Then, identify the symbolic link to the absolute path for its executable in the /proc directory.

The flag is the absolute path to the symbolic link, and the file it is linked to.

Flag format: /absolute/path,/absolute/path

 ps -elf | grep ssh
 sudo ls -lisa /proc/1592

________________________________________________________________________________________________________________________________________________
Find the questionable website that the user browsed to (using Chrome), that appears to be malicious.

$History = (Get-Content 'C:\users\student\AppData\Local\Google\Chrome\User Data\Default\History') -replace "[^a-zA-Z0-9\.\:\/]",""
$History| Select-String -Pattern "(https|http):\/\/[a-zA-Z_0-9]+\.\w+[\.]?\w+" -AllMatches|foreach {$_.Matches.Groups[0].Value}| ft

https://www.exploitdb.com
https://www.exploitdb.com

---------------------------------------------------------------------------------------------------------------------------------------------------------

There is a file that was recently opened that may contain PII.
Get the flag from the contents of the file.
Hint: We're not interested in numbers.

Get-Item "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" | select -Expand property | ForEach-Object { [System.Text.Encoding]::Default.GetString
((Get-ItemProperty -Path "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" -Name $_).$_)}



------------------------------------------------------------------------

What is the creation time of the questionable file in the prefetch folder?
Flag format: mm/dd/yyyy

gci -Path 'C:\Windows\Prefetch' -ErrorAction Continue  |select FullName, LastAccessTime , CreationTime 
-----------------------------------------------------------------------

Check event logs for a flag string.
Machine: file-server

get-EventLog -LogName System -Message "*flag*" | ft -wrap   

-----------------------------------------------------------------------------------------------------------------

File: /home/garviel/conn.log
Use jq to pretty print the JSON file conn.log.
Hash the pretty-printed file with md5sum for the flag.
Sample JSON "Pretty Print" Output (without piping to MD5SUM)


  "ts": 1615383120.585641,
  "uid": "C9ybUDHykHdrh0h93",
  "id.orig_h": "10.50.24.73",
  "id.orig_p": 38156,
  "id.resp_h": "192.168.65.20",
  "id.resp_p": 443,
  "proto": "tcp",
  "duration": 2.8133392333984375e-05,
  "orig_bytes": 0,
  "resp_bytes": 0,

HINT:
https://jqplay.org/
https://docs.jsonata.org/simple
https://stedolan.github.io/jq/manual/

jq '.'  conn.log | md5sum 

_____________------------------------------------------------------------------------------
File : /home/garviel/conn.log
This file is a conn.log made in Zeek (Bro) with data about TCP/IP connections.
Use jq to locate and count the unique originating endpoint IP addresses in the file. Enter the number of unique originating IP addresses as the flag.
Flag format: #
HINT: Use this link to understand the JSON objectâ€™s attributes
http://gauss.ececs.uc.edu/Courses/c6055/pdf/bro_log_vars.pdf

jq '."id.orig_h"' conn.log |sort | uniq | wc -l

----------------------------------------------------------------------------------------------------------------------------------
File: /home/garviel/output.xml
Parse all of the IP addresses from the file using XPATH queries
https://www.w3schools.com/xml/xpath_intro.asp
HINT:
http://xpather.com/
http://www.whitebeam.org/library/guide/TechNotes/xpathtestbed.rhtm
Sample Output (without piping to MD5SUM)
 addr="XXX.xxx.xxx.xxx"
 addr="XXX.xxx.xxx.xxx"
 addr="XXX.xxx.xxx.xxx"
 addr="XXX.xxx.xxx.xxx"
 addr="XXX.xxx.xxx.xxx"
 addr="XXX.xxx.xxx.xxx"
--TRIMMED--
Flag format: md5 hash of output

xpath -q -e '//@addr'  output.xml  |md5sum 

---------------------------------------------------------------------------------------------------------------------------------------

File: /home/garviel/output.xml
Select all of the IP addresses and ports using a single XPATH Union Statement
Pipe the result to md5sum for the flag
HINT:
https://librarycarpentry.org/lc-webscraping/02-xpath/index.html
Sample Output (without piping to MD5SUM)
addr="xx.xxx.xx.xx"
 addr="xx.xxx.xx.xx"
 addr="xx.xxx.xx.xx"
 addr="xx.xxx.xx.xx"
 portid="xx"
 addr="10.50.29.6"
 addr="xx.xxx.xx.xx"
 portid="22"
--TRIMMED--

xpath -q -e '//@addr|//@portid'  output.xml | md5sum 

------------------------------------------------------------------------------------------------------------------------------------
Use the log file attached to this for all Whut questions.
How many unique users logged into this machine?

grep "session opened" log.txt 

-----------------------------------------------------------------------------------------------------------------------------------------------















------------
